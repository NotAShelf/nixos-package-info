name: Publish Database Releases

on:
  workflow_dispatch:
  workflow_call:
  schedule:
    - cron: "0 1 * * *" # everyday at 1AM

jobs:
  # update the revision (git_ref) key in data/targets.json
  update-revision:
    name: "Update Nixpkgs Revision"
    if: github.repository == 'notashelf/nixos-package-info'
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Update Nixpkgs Revision
        uses: ./.github/workflows/prelude.yml
        with:
          command: "nix run .#update-sources data/targets.json"

      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "[CI]: update nixpkgs revision"
          push_options: "--force"
          commit_user_name: GitHub Actions

  # use updated targets.json to generate a raw data dump from nixpkgs flake
  update-raw-data:
    name: "Update Raw Data"
    needs: update-revision
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout & Install Nix
        uses: ./.github/workflows/prelude.yml

      # TODO: takes around 7 minutes on a low end device
      # can this be optimized?
      - name: Update raw nixpkgs data
        run: |
          nix shell github:nixos/nixos-search#flake-info
          flake-info --json -k Package group ./data/targets.json nixpkgs > nixpkgs-data.json
          ls nixpkgs-data.json # make sure the path is actually created

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nixpkgs-data.json
          path: nixpkgs-data.json

  publish-database:
    name: "Publish Package Databases"
    needs: update-raw-data
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: nixpkgs-data.json

      - name: Install Nix & Store nixos-package-info
        uses: ./.github/workflows/prelude.yml
        with:
          command: "nix build .#nixos-package-info -Lv"

      # TODO: the package should be in the store at this point, does this shill pull deps?
      - name: Generate lightweight database
        run: nix run .#nixos-package-info -- --input data/nixpkgs.json > database.json

      - name: Generate full database
        run: nix run .#nixos-package-info -- --full --input data/nixpkgs.json > database-full.json

      # nix probably handles checking checksums for non-imperative downloads
      # but in case of ad-hoc database management, user might want to manually verify
      # checksums in their implementation
      - name: Generate checksums
        run: |
          md5sum database.json database-full.json > md5-checksums.txt
          sha256sum database.json database-full.json > sha256-checksums.txt
          sha512sum database.json database-full.json > sha512-checksums.txt

      - name: Get current date
        id: get-date
        # output format: 2023-12-22-120000
        run: echo "date=$(date +'%Y-%m-%d-%H%M%S')" >> ${GITHUB_OUTPUT}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.date.outputs.get-date }}
          tag_name: ${{ steps.date.outputs.get-date }}
          files: |
            database.json
            database-full.json
            *-checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
