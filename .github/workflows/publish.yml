name: Publish Database Releases

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["update.yml"]
    types:
      - completed

jobs:
  update-sources:
    needs: update-revision
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Update raw nixpkgs data
        run: |
          nix shell github:nixos/nixos-search#flake-info
          flake-info --json -k Package group ./targets.json nixpkgs > nixpkgs-data.json

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nixpkgs-data.json
          path: nixpkgs-data.json

  publish:
    needs: update-sources
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: nixpkgs-data.json

      - name: Swap space report before modification
        shell: bash
        run: |
          echo "Memory and swap:"
          free -h
          echo
          swapon --show
          echo

      - name: Set Swap
        shell: bash
        run: |
          export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
          sudo swapoff $SWAP_FILE
          sudo rm $SWAP_FILE
          sudo fallocate -l 10G $SWAP_FILE
          sudo chmod 600 $SWAP_FILE
          sudo mkswap $SWAP_FILE
          sudo swapon $SWAP_FILE

      - name: Swap space report after modification
        shell: bash
        run: |
          echo "Memory and swap:"
          free -h
          echo
          swapon --show
          echo

      - name: Install nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Build Package
        run: nix build .#nixos-package-info -Lv

      - name: Generate lightweight database
        run: nix run .#nixos-package-info -- --input data/nixpkgs.json > database.json

      - name: Generate full database
        run: nix run .#nixos-package-info -- --full --input data/nixpkgs.json > database-full.json

      - name: Generate checksums
        run: |
          md5sum database.json database-full.json > md5-checksums.txt
          sha256sum database.json database-full.json > sha256-checksums.txt
          sha512sum database.json database-full.json > sha512-checksums.txt

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d-%H%M%S')" >> ${GITHUB_OUTPUT}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          name: Release ${{ steps.date.outputs.date }}
          tag_name: ${{ steps.date.outputs.date }}
          files: |
            database.json
            database-full.json
            *-checksums.txt
